// <auto-generated />
using System;
using MedicalOffice.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalOffice.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MedicalOffice.DAL.Models.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cabinet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "289a"
                        },
                        new
                        {
                            Id = 2,
                            Number = "335"
                        },
                        new
                        {
                            Id = 3,
                            Number = "258"
                        });
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CabinetId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CabinetId = 1,
                            FirstName = "Виктор",
                            LastName = "Васильев",
                            SecondName = "Петрович",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            CabinetId = 2,
                            FirstName = "Николай",
                            LastName = "Илонов",
                            SecondName = "Алексеевич",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 3,
                            CabinetId = 3,
                            FirstName = "Василий",
                            LastName = "Сдобов",
                            RegionId = 1,
                            SecondName = "Васильевич",
                            SpecializationId = 3
                        });
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ул Калатушкина",
                            DateOfBirth = new DateTime(1995, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Иван",
                            Gender = 1,
                            LastName = "Иванов",
                            SecondName = "Иванович"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ул Калатушкина",
                            DateOfBirth = new DateTime(1995, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Петр",
                            Gender = 1,
                            LastName = "Петрович",
                            SecondName = "Петров"
                        },
                        new
                        {
                            Id = 3,
                            Address = "ул Калатушкина",
                            DateOfBirth = new DateTime(1995, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Алексей",
                            Gender = 1,
                            LastName = "Алексеевич",
                            SecondName = "Алексеев"
                        },
                        new
                        {
                            Id = 4,
                            Address = "ул Калатушкина",
                            DateOfBirth = new DateTime(1995, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Виктор",
                            Gender = 1,
                            LastName = "Викторов",
                            SecondName = "Викторович"
                        },
                        new
                        {
                            Id = 5,
                            Address = "ул Калатушкина",
                            DateOfBirth = new DateTime(1995, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Юлия",
                            Gender = 2,
                            LastName = "Иванова",
                            SecondName = "Ивановна"
                        });
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.PatientRegionMapping", b =>
                {
                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("PatientId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("PatientRegionMapping");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            PatientId = 1,
                            RegionId = 2
                        },
                        new
                        {
                            PatientId = 3,
                            RegionId = 1
                        });
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "26"
                        },
                        new
                        {
                            Id = 2,
                            Number = "28"
                        },
                        new
                        {
                            Id = 3,
                            Number = "29"
                        });
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Хирург"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Онколог"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Анестезиолог"
                        });
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Doctor", b =>
                {
                    b.HasOne("MedicalOffice.DAL.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalOffice.DAL.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("MedicalOffice.DAL.Models.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("Region");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.PatientRegionMapping", b =>
                {
                    b.HasOne("MedicalOffice.DAL.Models.Patient", "Patient")
                        .WithMany("Regions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalOffice.DAL.Models.Region", "Region")
                        .WithMany("Patients")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Patient", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("MedicalOffice.DAL.Models.Region", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
